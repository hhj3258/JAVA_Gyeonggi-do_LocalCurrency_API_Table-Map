import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import javax.swing.JTextField;
import java.awt.Component;
import javax.swing.ScrollPaneConstants;
import javax.swing.JComboBox;
import java.awt.event.ContainerAdapter;
import java.awt.event.ContainerEvent;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.Color;
import java.awt.SystemColor;
import java.awt.Font;

public class test extends JFrame {

	public DataTableModel dataModel = new DataTableModel();
	
	private JPanel contentPane;
	private JTable table;
	private JTextField txtserch;
	
	private String[] combo=new String[3];
	private String choose="상호명";
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					test frame = new test();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public test() {
		setFont(new Font("맑은 고딕", Font.PLAIN, 12));
		setTitle("\uD504\uB85C\uC81D\uD2B8_\uACBD\uAE30\uC9C0\uC5ED\uD654\uD3D0 \uAC00\uB9F9\uC810_20163329_\uD64D\uD604\uC900");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 953, 554);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JButton btnNewButton = new JButton("\uB9AC\uC2A4\uD2B8 \uAC31\uC2E0");
		btnNewButton.setFont(new Font("맑은 고딕", Font.PLAIN, 12));
		btnNewButton.setForeground(Color.BLACK);
		btnNewButton.setBackground(Color.WHITE);
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// 인터넷 연결이 필요하기 때문에 연속으로 누르는 것을 방지하기 위해 버튼 활성화를 끔
				btnNewButton.setEnabled(false);
				
				// Thread 로 덮어서, 버튼 멈춘 현상 제거
				// 원래는 handler 와 같은 루틴을 이용하여 main thread 에 message 를 날려 ui 를 refresh 하는 작업을 하는 것이 정석
				// 여기서는 간단히 해결 하기 위해 그냥 전체 영역을 thread 로 덮음. 
				// 안드로이드같은 플랫폼에서는 이렇게 하면 오류가 발생함.
				new Thread() {
					@Override
					public void run() {
						// [PPT 보고 진행하는 부분] 버튼 비활성화, 웹 함수 불러오는 부분, 버튼 활성화
						
						//버튼 비활성화
						btnNewButton.setEnabled(false);
						
						//웹 데이터 및 데이터 설정하는 함수를 불러온다.
						loadWebData();
						
						//모든 동작이 끝난 뒤에 버튼을 다시 활성화 시켜줌.
						btnNewButton.setEnabled(true);
					}
				}.start();
			}
		});
		btnNewButton.setBounds(12, 20, 116, 34);
		contentPane.add(btnNewButton);
		
		
		JButton btnNewButton_1 = new JButton("\uAC80\uC0C9");
		btnNewButton_1.setFont(new Font("맑은 고딕", Font.PLAIN, 12));
		btnNewButton_1.setBackground(Color.WHITE);
		btnNewButton_1.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				String name=txtserch.getText();
				

				btnNewButton_1.setEnabled(false);
				
				new Thread() {
					@Override
					public void run() {
						
						btnNewButton_1.setEnabled(false);
						loadWebData(name);
						btnNewButton_1.setEnabled(true);
					}
				}.start();
			}
			
		});
		table = new JTable(dataModel);
		//크기 설정 및 한개만 선택 가능하도록 설정
		table.setRowHeight(25);
		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		
		//scroll 넣기
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(12,64,913,441);
		
		//버튼 및 리스트를 UI에 넣기

		contentPane.add(scrollPane);
		
		
		
		btnNewButton_1.setBounds(416, 26, 72, 23);
		contentPane.add(btnNewButton_1);
		
		txtserch = new JTextField();
		txtserch.setBounds(244, 27, 160, 21);
		contentPane.add(txtserch);
		txtserch.setColumns(10);
		
		
		
		JComboBox comboBox = new JComboBox();
		comboBox.setFont(new Font("맑은 고딕", Font.PLAIN, 12));
		comboBox.setBackground(Color.WHITE);
		combo[0]="상호명";
		combo[1]="업종명";
		combo[2]="시군명";
		comboBox.addFocusListener(new FocusAdapter() {
			@Override
			public void focusGained(FocusEvent e) {
				choose=comboBox.getSelectedItem().toString();
			}
		});
		
		

		comboBox.setModel(new DefaultComboBoxModel(combo));
		
		comboBox.setBounds(151, 26, 81, 23);
		contentPane.add(comboBox);
		
		JButton btnNewButton_2 = new JButton("\uC9C0\uB3C4");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String map_url = "https://map.naver.com/v5/search/%EC%B6%98%EC%B2%9C%EC%8B%9C%EC%B2%AD/place/1198933046?c=14219007.0941792,4562390.0648855,14,0,0,0,dh";
				
				//브라우저에서 결과 확인
				//https://www.google.co.kr/maps/place/%EC%B6%98%EC%B2%9C+%EC%8B%9C%EC%B2%AD/@37.8812805,127.7278875,17z/data=!3m1!4b1!4m5!3m4!1s0x3562e5dc0e6c4867:0x7173f65acfe3f9b2!8m2!3d37.8812763!4d127.7300762
				//"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
				ProcessBuilder pb = new ProcessBuilder("C"+":/"+"Program Files (x86)/Google/Chrome/Application/chrome.exe",map_url);
				try {
					pb.start();
				} catch (Exception e2) {
					
				}
			}
		});
		btnNewButton_2.setBounds(569, 28, 97, 23);
		contentPane.add(btnNewButton_2);
	}
	
	private void loadWebData() {
		
			String url = "https://openapi.gg.go.kr/RegionMnyFacltStus?KEY=a87aef6b2f03489facc47c98c9208501&pIndex=1&pSize=1000";
		
		Document res = HttpModule.requestXmlGet(url);
		
		NodeList SIGUN_NM = res.getElementsByTagName("SIGUN_NM");						//시군명
		NodeList CMPNM_NM = res.getElementsByTagName("CMPNM_NM");						//상호명
		NodeList INDUTYPE_NM=res.getElementsByTagName("INDUTYPE_NM");					//업종명
		NodeList REFINE_ROADNM_ADDR=res.getElementsByTagName("REFINE_ROADNM_ADDR");		//도로명주소
		NodeList TELNO=res.getElementsByTagName("TELNO");								//전화번호
		NodeList DATA_STD_DE=res.getElementsByTagName("DATA_STD_DE");					//데이터 기준 일자
		
		
		for(int i=0; i<TELNO.getLength(); ++i) 
		{
			//여기서 Node는 org.w3c.dom.Node
			Node nSIGUN_NM=SIGUN_NM.item(i);
			Node nCMPNM_NM = CMPNM_NM.item(i);
			Node nINDUTYPE_NM=INDUTYPE_NM.item(i);
			Node nREFINE_ROADNM_ADDR=REFINE_ROADNM_ADDR.item(i);
			Node nTELNO=TELNO.item(i);
			Node nDATA_STD_DE=DATA_STD_DE.item(i);
			
			
			String tel, street, category;
			
			if(nTELNO.getFirstChild() == null) tel="";
			else tel=nTELNO.getFirstChild().getNodeValue();
			
			if(nREFINE_ROADNM_ADDR.getFirstChild() == null) street="";
			else street=nREFINE_ROADNM_ADDR.getFirstChild().getNodeValue();
			
			if(nINDUTYPE_NM.getFirstChild() == null) category="";
			else category=nINDUTYPE_NM.getFirstChild().getNodeValue();
			
			String sigun=nSIGUN_NM.getFirstChild().getNodeValue();
			String storename=nCMPNM_NM.getFirstChild().getNodeValue();
			String date=nDATA_STD_DE.getFirstChild().getNodeValue();
			
			
			Data data =new Data(sigun, storename, category, street, tel, date);
		
			dataModel.addData(data);
		}
	}
	
	
	private void loadWebData(String name) {
		dataModel.clearData();
		String url = "https://openapi.gg.go.kr/RegionMnyFacltStus?KEY=a87aef6b2f03489facc47c98c9208501&pIndex=1&pSize=1000";
		//https://openapi.gg.go.kr/RegionMnyFacltStus?KEY=a87aef6b2f03489facc47c98c9208501&pIndex=2&pSize=1000&SIGUN_CD=41150
		//시군코드: 의정부시
		Document res = HttpModule.requestXmlGet(url);
		
		NodeList SIGUN_NM = res.getElementsByTagName("SIGUN_NM");						//시군명
		NodeList CMPNM_NM = res.getElementsByTagName("CMPNM_NM");						//상호명
		NodeList INDUTYPE_NM=res.getElementsByTagName("INDUTYPE_NM");					//업종명
		NodeList REFINE_ROADNM_ADDR=res.getElementsByTagName("REFINE_ROADNM_ADDR");		//도로명주소
		NodeList TELNO=res.getElementsByTagName("TELNO");								//전화번호
		NodeList DATA_STD_DE=res.getElementsByTagName("DATA_STD_DE");					//데이터 기준 일자
		
		for(int i=0; i<TELNO.getLength(); ++i) {
			//여기서 Node는 org.w3c.dom.Node
			Node nSIGUN_NM=SIGUN_NM.item(i);
			Node nCMPNM_NM = CMPNM_NM.item(i);
			Node nINDUTYPE_NM=INDUTYPE_NM.item(i);
			Node nREFINE_ROADNM_ADDR=REFINE_ROADNM_ADDR.item(i);
			Node nTELNO=TELNO.item(i);
			Node nDATA_STD_DE=DATA_STD_DE.item(i);
			
			String tel, street, category = null;
			
			if(nTELNO.getFirstChild() == null) tel="";
			else tel=nTELNO.getFirstChild().getNodeValue();
			
			if(nREFINE_ROADNM_ADDR.getFirstChild() == null) street="";
			else street=nREFINE_ROADNM_ADDR.getFirstChild().getNodeValue();
			
			if(nINDUTYPE_NM.getFirstChild() == null) category="";
			else category=nINDUTYPE_NM.getFirstChild().getNodeValue();
			
			String sigun=nSIGUN_NM.getFirstChild().getNodeValue();
			String storename=nCMPNM_NM.getFirstChild().getNodeValue();
			String date=nDATA_STD_DE.getFirstChild().getNodeValue();
			
			String focus="";

				if(choose.equals("상호명")) 
					focus=storename;
				else if(choose.equals("시군명"))
					focus=sigun;
				else if(choose.equals("업종명"))
					focus=category;

					if(name.equals(focus)) {
						Data data =new Data(sigun, storename, category, street, tel, date);
					
						dataModel.addData(data);
					}

		}
	}
}
